// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecretSanta.Backend.DataAccess;

#nullable disable

namespace SecretSanta.Backend.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211205164034_AddedBasicEntities")]
    partial class AddedBasicEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SecretSanta.Backend.DomainModel.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BoxStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Boxes");
                });

            modelBuilder.Entity("SecretSanta.Backend.DomainModel.BoxesUsers", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("BoxId")
                        .HasColumnType("int");

                    b.Property<int?>("GiftToUserId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsGifted")
                        .HasColumnType("bit");

                    b.Property<double?>("MaxGiftCost")
                        .HasColumnType("float");

                    b.Property<string>("Preferences")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "BoxId");

                    b.HasIndex("BoxId");

                    b.HasIndex("GiftToUserId");

                    b.ToTable("BoxesUsers");
                });

            modelBuilder.Entity("SecretSanta.Backend.DomainModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SecretSanta.Backend.DomainModel.BoxesUsers", b =>
                {
                    b.HasOne("SecretSanta.Backend.DomainModel.Box", "Box")
                        .WithMany("BoxesUsers")
                        .HasForeignKey("BoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecretSanta.Backend.DomainModel.User", "GiftToUser")
                        .WithMany()
                        .HasForeignKey("GiftToUserId");

                    b.HasOne("SecretSanta.Backend.DomainModel.User", "User")
                        .WithMany("BoxesUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Box");

                    b.Navigation("GiftToUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SecretSanta.Backend.DomainModel.Box", b =>
                {
                    b.Navigation("BoxesUsers");
                });

            modelBuilder.Entity("SecretSanta.Backend.DomainModel.User", b =>
                {
                    b.Navigation("BoxesUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
